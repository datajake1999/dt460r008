/*
 ***********************************************************************
 *
 *                           Coryright (c)
 *    © Digital Equipment Corporation 1995. All rights reserved.
 *
 *    Restricted Rights: Use, duplication, or disclosure by the U.S.
 *    Government is subject to restrictions as set forth in subparagraph
 *    (c) (1) (ii) of DFARS 252.227-7013, or in FAR 52.227-19, or in FAR
 *    52.227-14 Alt. III, as applicable.
 *
 *    This software is proprietary to and embodies the confidential
 *    technology of Digital Equipment Corporation and other parties.
 *    Possession, use, or copying of this software and media is authorized
 *    only pursuant to a valid written license from Digital or an
 *    authorized sublicensor.
 *
 ***********************************************************************
 *    File Name:	usa_phon.tab
 *    Author:
 *    Creation Date:
 *
 *    Functionality:
 *  phonemic character set conversions ... included into usa_main.c 
 *
 ***********************************************************************
 *    Revision History:
 * 
 * 001  EAB  3/24/97  Unified phonemic codes df, BATS # 302.
 * 002  GL   10/28/97  add ascky symbol for ir,er,ar,or,ur
 * 003  tek  29aug97 filled in the missing characters for SAPI Visual cEnginePhomeme
 *						(first done aug97)
 * 004  GL   12/07/98  BATS#841 fix ir,er,ar,or,ur ascky phoneme 
 */

unsigned char	usa_ascky[] =	{

/* allophones */

        '_',      'i',    'I',    'e',    'E',    '@',    'a',    'A', 
	'W',	'^',	'c',	'o',	'O',	'U',	'u',	'R',
        'Y',    'x',    '|',    'B',    'K',    'P',    'M',    'j',
	'w',	'y',	'r',	'l',	'h',	'R',	'l',	'm',
	'n',	'G',	'L',	'D',	'N',	'f',	'v',	'T',
	'D',	's',	'z',	'S',	'Z',	'p',	'b',	't',
	'd',	'k',	'g',	'&',	'Q',	'q',	'C',	'J',
	'F',

/* place holders for null range */

		0,	0,	0,	0,	0,	0,	0,
	0,	0,	0,	0,	0,	0,	0,	0,
	0,	0,	0,	0,	0,	0,	0,	0,
	0,	0,	0,	0,	0,	0,	0,	0,
	0,	0,	0,	0,	0,	0,	0,	0,
	0,	0,	0,	0,

/* control */

	'~',	'=',	'`',	'\'',	'"',	'/',	'\\',	'<',	
	'-', 	'*',	'#',	' ',	'(',	')', 	';',	',',
	'.',	'?',	'!',	'+' ,'^' 
};


unsigned int usa_ascky_rev[] = {

	NULL_ASCKY,	NULL_ASCKY,  	NULL_ASCKY, 	NULL_ASCKY,
	NULL_ASCKY,	NULL_ASCKY,  	NULL_ASCKY, 	NULL_ASCKY,
	NULL_ASCKY,	PUSA(WBOUND),	NULL_ASCKY, 	NULL_ASCKY,
	NULL_ASCKY,	NULL_ASCKY,  	NULL_ASCKY, 	NULL_ASCKY,

	NULL_ASCKY,	NULL_ASCKY,  	NULL_ASCKY, 	NULL_ASCKY,
	NULL_ASCKY,	NULL_ASCKY,  	NULL_ASCKY, 	NULL_ASCKY,
	NULL_ASCKY,	NULL_ASCKY,  	NULL_ASCKY, 	NULL_ASCKY,
	NULL_ASCKY,	NULL_ASCKY,  	NULL_ASCKY, 	NULL_ASCKY,

	PUSA(WBOUND),	PUSA(EXCLAIM), 	PUSA(SEMPH),	PUSA(HYPHEN),
	NULL_ASCKY,  	NULL_ASCKY,  	PUSA(DX),   	PUSA(S1),
	PUSA(PPSTART),	PUSA(VPSTART),	PUSA(MBOUND),	PUSA(NEW_PARAGRAPH),
	PUSA(COMMA),  	PUSA(SBOUND),  	PUSA(PERIOD),  	PUSA(HAT_RISE),

	NULL_ASCKY,   	NULL_ASCKY,   	NULL_ASCKY,  	NULL_ASCKY,
	NULL_ASCKY,   	NULL_ASCKY,   	NULL_ASCKY,  	NULL_ASCKY,
	NULL_ASCKY,   	NULL_ASCKY,   	PITCH_CHANGE,	PUSA(RELSTART),
	PUSA(HAT_RF),  	PUSA(S3),   	NULL_ASCKY,  	PUSA(QUEST),

        PUSA(AE),       PUSA(AY),       PUSA(IR),       PUSA(CH),
        PUSA(DH),       PUSA(EH),       PUSA(DF),       PUSA(NX),
        NULL_ASCKY,     PUSA(IH),       PUSA(JH),       PUSA(ER),
        PUSA(EL),       PUSA(OR),       PUSA(EN),       PUSA(OY),

        PUSA(AR),       PUSA(TX),       PUSA(RR),       PUSA(SH), 
	PUSA(TH),     	PUSA(UH),     	NULL_ASCKY,  	PUSA(AW),
	NULL_ASCKY,   	PUSA(YU),     	PUSA(ZH),    	NULL_ASCKY,
	PUSA(S1),     	NULL_ASCKY,   	PUSA(AH),    	PUSA(SIL),
	
	PUSA(S2),     	PUSA(AA),     	PUSA(B),     	PUSA(AO),
	PUSA(D),      	PUSA(EY),     	PUSA(F),     	PUSA(G),
        PUSA(HX),       PUSA(IY),       PUSA(UR),     PUSA(K),
	PUSA(LL),     	PUSA(M),      	PUSA(N),     	PUSA(OW),
	
	PUSA(P),      	PUSA(Q),      	PUSA(R),     		PUSA(S),
	PUSA(T),      	PUSA(UW),     	PUSA(V),     		PUSA(W),
	PUSA(AX),     	PUSA(Y),      	PUSA(Z),     		NULL_ASCKY,
	PUSA(IX),     	NULL_ASCKY,   	PUSA(BLOCK_RULES), 	NULL_ASCKY
};

/*
 *  string to arpabet conversion ...
 */

unsigned char	usa_arpa[] = {
	'_',	' ',
	'i',	'y',
	'i',	'h',
	'e',	'y',
	'e',	'h',
	'a',	'e',
	'a',	'a',
	'a',	'y',
	'a',	'w',
	'a',	'h',
	'a',	'o',
	'o',	'w',
	'o',	'y',
	'u',	'h',
	'u',	'w',
	'r',	'r',
	'y',	'u',
	'a',	'x',
	'i',	'x',
	'i',	'r',
	'e',	'r',
	'a',	'r',
	'o',	'r',
	'u',	'r',
	'w',	' ',
	'y',	'x',
	'r',	' ',
	'l',	' ',
	'h',	'x',
	'r',	'x',
	'l',	'x',
	'm',	' ',
	'n',	' ',
	'n',	'x',
	'e',	'l',
	'd',	'z',			/* Dentalized "d".	*/
	'e',	'n',
	'f',	' ',
	'v',	' ',
	't',	'h',
	'd',	'h',
	's',	' ',
	'z',	' ',
	's',	'h',
	'z',	'h',
	'p',	' ',
	'b',	' ',
	't',	' ',
	'd',	' ',
	'k',	' ',
	'g',	' ',
	'd',	'x',
	't',	'x',
	'q',	' ',
	'c',	'h',
	'j',	'h',
	'd',	'f',
/* place holders for null range */

	0,	0,	       /* 57  = */
	0,	0,	       /* 58  = */
	0,	0,	       /* 59  = */

	0,	0,	       /* 60  = */
	0,	0,	       /* 61  = */
	0,	0,	       /* 62  = */
	0,	0,	       /* 63  = */
	0,	0,	       /* 64  = */
	0,	0,	       /* 65  = */
	0,	0,	       /* 66  = */
	0,	0,	       /* 67  = */
	0,	0,	       /* 68  = */
	0,	0,	       /* 69  = */

	0,	0,	       /* 70  = */
	0,	0,	       /* 71  = */
	0,	0,	       /* 72  = */
	0,	0,	       /* 73  = */
	0,	0,	       /* 74  = */
	0,	0,	       /* 75  = */
	0,	0,	       /* 76  = */
	0,	0,	       /* 77  = */
	0,	0,	       /* 78  = */
	0,	0,	       /* 79  = */

	0,	0,	       /* 80  = */
	0,	0,	       /* 81  = */
	0,	0,	       /* 82  = */
	0,	0,	       /* 83  = */
	0,	0,	       /* 84  = */
	0,	0,	       /* 85  = */
	0,	0,	       /* 86  = */
	0,	0,	       /* 87  = */
	0,	0,	       /* 88  = */
	0,	0,	       /* 89  = */

	0,	0,	       /* 90  = */
	0,	0,	       /* 91  = */
	0,	0,	       /* 92  = */
	0,	0,	       /* 93  = */
	0,	0,	       /* 94  = */
	0,	0,   	       /* 95  = */
	0,	0,	       /* 96  = */
	0,	0,	       /* 97  = */
	0,	0,	       /* 98  = */
	0,	0,	       /* 99  = */


	'~',	' ',	/* BLOCK_RULES =  ~ */
	'=',	' ',	/* S3 =  	 =	    */
	'`',	' ',	/* S2 = 		 ` 	*/
	'\'',	' ',	/* S1 =		 ' 	    */
	'\"',	' ',	/* SEMPH =	 "	    */
	'/',	' ',	/* HAT_RISE  = 	 /	*/
	'\\',	' ',	/* HAT_FALL  = 	 \	*/
	'/',	'\\',	/* HAT_RF  = 	 <	*/
	'-',	' ',	/* SBOUND  =	 -	*/
	'*',	' ',	/* MBOUND  = 	 *	*/
	'#',	' ',	/* HYPHEN  = 	 #	*/
	' ',	' ',	/* WBOUND  = 	 	*/
	'(',	' ',	/* PPSTART = 	 (	*/
	')',	' ',	/* VPSTART = 	 )	*/
	';',	' ',	/* RELSTART  = 	 ;	*/
	',',	' ',	/* COMMA  = 	 ,	*/
	'.',	' ',	/* PERIOD = 	 .	*/
	'?',	' ',	/* QUEST  = 	 ?	*/
	'!',	' ',	/* EXCLAIM  = 	 !	*/
	'+',	' ',	/* NEW_PARAGRAPH = +*/
	'^',	' '
	};			       

