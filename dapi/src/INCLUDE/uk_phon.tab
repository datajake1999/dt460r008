/*
 ***********************************************************************
 *
 *                           Coryright (c)
 *    © Digital Equipment Corporation 1995. All rights reserved.
 *
 *    Restricted Rights: Use, duplication, or disclosure by the U.S.
 *    Government is subject to restrictions as set forth in subparagraph
 *    (c) (1) (ii) of DFARS 252.227-7013, or in FAR 52.227-19, or in FAR
 *    52.227-14 Alt. III, as applicable.
 *
 *    This software is proprietary to and embodies the confidential
 *    technology of Digital Equipment Corporation and other parties.
 *    Possession, use, or copying of this software and media is authorized
 *    only pursuant to a valid written license from Digital or an
 *    authorized sublicensor.
 *
 ***********************************************************************
 *    File Name:	uk_phon.tab
 *    Author:		Doug Robinson/Ginger Lin
 *    Creation Date: 
 *
 *    Functionality:
 *    phonemic character set conversions ... included into uk_main.c 
 *
 ***********************************************************************
 *    Revision History:
 * 
 * 001  EAB  3/24/97  Unified phonemic codes df, BATS # 302.
 * 002	DR	 09/25/97 Copied from USA_phon.tab.  Modeified for the uk phonemes...
 * 003  GL   10/01/97 use PUK instead of PUSA.
 */


unsigned char	uk_ascky[] =	{

/* allophones */

	'_',	'i',	'I',	'e',	'E',	'@',	'a',	'A',	'W',	'^',
	'c',	'o',	'O',	'U',	'u',	'R',	'Y',	'x',	'|',	'F',
	'K',	'P',	'M',	'j',	'w',	'y',	'r',	'l',	'h',	'B',
	'X',	'm',	'n',	'G',	'L',	'H', 	'N',	'f',	'v',	'T',
	'D',	's',	'z',	'S',	'Z',	'p',	'b',	't',	'd',	'k',
	'g',	'V',	'Q',	'q',	'C',	'J',	0,

/* place holders for null range */

		0,	0,	0,	0,	0,	0,	0,
	0,	0,	0,	0,	0,	0,	0,	0,
	0,	0,	0,	0,	0,	0,	0,	0,
	0,	0,	0,	0,	0,	0,	0,	0,
	0,	0,	0,	0,	0,	0,	0,	0,
	0,	0,	0,	0,

/* control */

	'~',	'=',	'`',	'\'',	'"',	'/',	'\\',	'<',	
	'-', 	'*',	'#',	' ',	'(',	')', 	';',	',',
	'.',	'?',	'!',	'+' ,'^' 
};


unsigned int uk_ascky_rev[] = {

	NULL_ASCKY,		NULL_ASCKY, 	NULL_ASCKY, 	NULL_ASCKY,
	NULL_ASCKY,		NULL_ASCKY, 	NULL_ASCKY, 	NULL_ASCKY,
	NULL_ASCKY,		PUK(WBOUND),	NULL_ASCKY, 	NULL_ASCKY,
	NULL_ASCKY,		NULL_ASCKY, 	NULL_ASCKY, 	NULL_ASCKY,

	NULL_ASCKY,		NULL_ASCKY, 	NULL_ASCKY, 	NULL_ASCKY,
	NULL_ASCKY,		NULL_ASCKY, 	NULL_ASCKY, 	NULL_ASCKY,
	NULL_ASCKY,		NULL_ASCKY, 	NULL_ASCKY, 	NULL_ASCKY,
	NULL_ASCKY,		NULL_ASCKY, 	NULL_ASCKY, 	NULL_ASCKY,

	PUK(WBOUND),	PUK(EXCLAIM),	PUK(SEMPH),		PUK(HYPHEN),
	NULL_ASCKY, 	NULL_ASCKY, 	NULL_ASCKY,		PUK(S1),
	PUK(PPSTART),	PUK(VPSTART),	PUK(MBOUND),	PUK(NEW_PARAGRAPH),
	PUK(COMMA),		PUK(SBOUND),	PUK(PERIOD),	PUK(HAT_RISE),

	NULL_ASCKY, 	NULL_ASCKY, 	NULL_ASCKY, 	NULL_ASCKY,
	NULL_ASCKY, 	NULL_ASCKY, 	NULL_ASCKY, 	NULL_ASCKY,
	NULL_ASCKY, 	NULL_ASCKY, 	PITCH_CHANGE,	PUK(RELSTART),
	PUK(HAT_RF),	PUK(S3),		NULL_ASCKY, 	PUK(QUEST),

	PUK(AE),		PUK(AY),		PUK(OH),		PUK(CH),
	PUK(DH),		PUK(EH),		PUK(IR),		PUK(NX),
	PUK(DZ),		PUK(IH),		PUK(JH),		PUK(ER),
	PUK(EL),		PUK(OR),		PUK(EN),		PUK(OY),

	PUK(AR),   		PUK(TX),		PUK(RR),		PUK(SH),	
	PUK(TH),		PUK(UH),		PUK(YR),   		PUK(AW),
	PUK(LX),   		PUK(YU),		PUK(ZH),		NULL_ASCKY,
	PUK(S1),		NULL_ASCKY, 	PUK(AH),		PUK(SIL),
	
	PUK(S2),		PUK(AA),		PUK(B),			PUK(AO),
	PUK(D),			PUK(EY),		PUK(F),			PUK(G),
	PUK(HX),		PUK(IY),		PUK(UR),   		PUK(K),
	PUK(LL),		PUK(M),			PUK(N),			PUK(OW),
	
	PUK(P),			PUK(Q),			PUK(R),			PUK(S),
	PUK(T),			PUK(UW),		PUK(V),			PUK(W),
	PUK(AX),		PUK(Y),			PUK(Z),			NULL_ASCKY,
	PUK(IX),		NULL_ASCKY, 	PUK(BLOCK_RULES),	NULL_ASCKY
};

/*
 *  string to arpabet conversion ...
 */

unsigned char	uk_arpa[] = {
	'_',	' ',
	'i',	'y',
	'i',	'h',
	'e',	'y',
	'e',	'h',
	'a',	'e',
	'a',	'a',
	'a',	'y',
	'a',	'w',
	'a',	'h',
	'a',	'o',
	'o',	'w',
	'o',	'y',
	'u',	'h',
	'u',	'w',
	'r',	'r',
	'y',	'u',
	'a',	'x',
	'i',	'x',
	'i',	'r',
	'e',	'r',
	'a',	'r',
	'o',	'r',
	'u',	'r',
	'w',	' ',
	'y',	' ',
	'r',	' ',
	'l',	' ',
	'h',	'x',
	'o',	'h',
	'l',	'x',
	'm',	' ',
	'n',	' ',
	'n',	'x',
	'e',	'l',
	'd',	'z',			/* Dentalized "d".	*/
	'e',	'n',
	'f',	' ',
	'v',	' ',
	't',	'h',
	'd',	'h',
	's',	' ',
	'z',	' ',
	's',	'h',
	'z',	'h',
	'p',	' ',
	'b',	' ',
	't',	' ',
	'd',	' ',
	'k',	' ',
	'g',	' ',
	'y',	'r',
	't',	'x',
	'q',	' ',
	'c',	'h',
	'j',	'h',
	'd',	'f',
/* place holders for null range */

	0,	0,	       /* 57  = */
	0,	0,	       /* 58  = */
	0,	0,	       /* 59  = */

	0,	0,	       /* 60  = */
	0,	0,	       /* 61  = */
	0,	0,	       /* 62  = */
	0,	0,	       /* 63  = */
	0,	0,	       /* 64  = */
	0,	0,	       /* 65  = */
	0,	0,	       /* 66  = */
	0,	0,	       /* 67  = */
	0,	0,	       /* 68  = */
	0,	0,	       /* 69  = */

	0,	0,	       /* 70  = */
	0,	0,	       /* 71  = */
	0,	0,	       /* 72  = */
	0,	0,	       /* 73  = */
	0,	0,	       /* 74  = */
	0,	0,	       /* 75  = */
	0,	0,	       /* 76  = */
	0,	0,	       /* 77  = */
	0,	0,	       /* 78  = */
	0,	0,	       /* 79  = */

	0,	0,	       /* 80  = */
	0,	0,	       /* 81  = */
	0,	0,	       /* 82  = */
	0,	0,	       /* 83  = */
	0,	0,	       /* 84  = */
	0,	0,	       /* 85  = */
	0,	0,	       /* 86  = */
	0,	0,	       /* 87  = */
	0,	0,	       /* 88  = */
	0,	0,	       /* 89  = */

	0,	0,	       /* 90  = */
	0,	0,	       /* 91  = */
	0,	0,	       /* 92  = */
	0,	0,	       /* 93  = */
	0,	0,	       /* 94  = */
	0,	0,   	       /* 95  = */
	0,	0,	       /* 96  = */
	0,	0,	       /* 97  = */
	0,	0,	       /* 98  = */
	0,	0,	       /* 99  = */


	'~',	' ',	/* BLOCK_RULES =  ~ */
	'=',	' ',	/* S3 =  	 =	    */
	'`',	' ',	/* S2 = 		 ` 	*/
	'\'',	' ',	/* S1 =		 ' 	    */
	'\"',	' ',	/* SEMPH =	 "	    */
	'/',	' ',	/* HAT_RISE  = 	 /	*/
	'\\',	' ',	/* HAT_FALL  = 	 \	*/
	'/',	'\\',	/* HAT_RF  = 	 <	*/
	'-',	' ',	/* SBOUND  =	 -	*/
	'*',	' ',	/* MBOUND  = 	 *	*/
	'#',	' ',	/* HYPHEN  = 	 #	*/
	' ',	' ',	/* WBOUND  = 	 	*/
	'(',	' ',	/* PPSTART = 	 (	*/
	')',	' ',	/* VPSTART = 	 )	*/
	';',	' ',	/* RELSTART  = 	 ;	*/
	',',	' ',	/* COMMA  = 	 ,	*/
	'.',	' ',	/* PERIOD = 	 .	*/
	'?',	' ',	/* QUEST  = 	 ?	*/
	'!',	' ',	/* EXCLAIM  = 	 !	*/
	'+',	' ',	/* NEW_PARAGRAPH = +*/
	'^',	' '
	};			       

